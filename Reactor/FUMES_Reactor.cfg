PART
{
	name = FUMES_Reactor
	module = Part
	author = Ed_Gauss

	MODEL
	{
		model = FUMES/Reactor/FUMES_Reactor
		scale = 1,1,1
	}
	scale = 1
	rescaleFactor = 1

	node_attach = 0,0,0

	NODE
	{
		name = top
		transform = Node_Top
		size = 1
		method = FIXED_JOINT
	}

	NODE
	{
		name = bottom
		transform = Node_Bottom
		size = 1
		method = FIXED_JOINT
	}

	TechRequired = advScienceTech
	entryCost = 3000
	cost = 1000
	category = Utility
	subcategory = 0
	title = FUMES Fuel Reactor
	description = Produces LF/Ox

	attachRules = 1,1,1,1,1

	//Mass as 50 kg/day S/E System from Dr. Zubrin's 1997 paper, plus a stock 1.25m Service Bay.
	mass = 0.191
	dragModelType = size1,srf
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 12
	maxTemp 2000 // = 3000

	RESOURCE
	{
		name = CarbonDioxide
		amount = 0
		maxAmount = 1131 
		//Volume of side tanks in liters (56.549 L), by a factor of 20 (rounded to the nearest unit).
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = LF+Ox
		StartActionName = Start Fuel Production
		StopActionName = Stop Fuel Production
		Efficiency = 1
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialist = false
		SpecialistBonusBase = 0
		Specialty = Engineer
		EfficiencyBonus = 1

		//This part represents a Sabatier reactor and Water Electrolysis,
		//(S/E) ISRU system designed to produce 50 kg of fuel/day, as discribed in 
		//Pioneer Astronautics' paper 
		//"Mars In-Situ Resource Utilization Based on the Reverse Water Gas Shift".
		//This is esetnally Dr. Zubrin continuing his work on Mars ISRU from Martin Merietta
		//(now Lockheed Martin) and estimating system parameters based on his experance.
		//Since KSP is a game/simulation, I'll trust the numbers as writen.

		//Since the whole point of FUMES is to adapt the S/E system to stock KSP, I will
		//assume that liquid methane is  LiquidFuel, and liquid oxygen is Oxidizer. The basis for this
		//assumption is that the stock LF/Ox is an abstrcation for various liquid propellants,
		//with optimizations done automatically. Alternatively, it could be a ALL OF THEM in
		//a comic and highly unstable mixture; this would explain the poor proformance and
		//lack of reliability in Kerbal engines. In eather case, a real S/E system produces 
		//LF/Ox in a 1:2 ratio. This provides excessive Oxidizer for stock engines, but
		//the system can dump excess if tanks get too full.

		//Since Dr. Zubrin only gives me a total propelant output, I need to work backwards.
		//The S/E system produces O2/CH4 in a 2:1 ratio, so a thrid of all propellant is methane.
		//Since I want to maintain the same methane production rate, I'll find the methane output.
		//50 kg(total)/3 = 16.667 kg(CH4)

		//As per my assumption above, this means that I need to make 11.111 kg of LiquidFuel per day.
		//The paper assumes fuel production only happens durring daytime, so one day is 12 hours here.
		//16.667 kg/day * 1 day/12 hours * 1 hour/3600 s = 0.00038581 kg/s

		//Community Resource Pack (CRP) gives the desity of LiquidFuel as 1000 kg/m^3, or 1 kg/L.
		//There are five Liters per unit of LiquidFuel though.
		//0.00038581 kg/s * 1 L/kg * 1 LiquidFuel/5 L = 0.000077162 LiquidFuel/s

		//I need to produce 1.1 units of Oxidizer for each 0.9 units of LiquidFuel produced.
		//This is actually well below the minimum output of the Sabatier reactor, as it produces
		//about two grams of oxygen for every gram of methane produced. Since LiquidFuel and Oxidizer
		//have the same density, this means this system will produce propellant in a 1:2 LF/Ox raito.
		//I can have the system dump leftover Oxidizer, so this is not a problem.
		//Reducing the Oxidizer output to stock raitos would be unrealistic and wasteful, as oxygen is 
		//useful for other applications.
		//0.000077162 LiquidFuel/s * 2 Oxidizer/1 LiquidFuel = 0.00015432 Oxidizer/s

		//While the reactors themselves reactors in the S/E need gasous hydrogen, 
		//liquid hydrogen is useful for cooling the gasous outputs into liquids. 
		//This would in turn heat the hydrogen into gas, preparing it for the reactors. 
		//Dr. Zubrin assumes this himself, and casually mentions this on page 16 of the paper.

		//So how much liquid hydrogen do I need? I need four moles of hydrogen to make one mole of methane.
		//Everything else is reclamed using water electrolysis. I'm not going to model startup/shutdown.
		//I need to know how many moles of methane the system is making. Methane is 16.042 g/mol.
		//0.00038581 kg/s * 1000 g/kg * 1 mol/16.042 g = 0.024053 mol/s (CH4)
		//0.024053 mol(CH4)/s * 4 (H)/(CH4) = 0.096212 mol/s (H)
		//Hydrogen is 1.0079 g/mol.
		//0.096212 mol/s * 1.0079 g/mol = 0.096972 g/s
		//CRP lists LqdHydrogen's density at 70.85 kg/m3, or 70.85 g/L, at 1 L/unit.
		//0.096972 g/s * 1 L/70.85 g = 0.0013687 L/s

		//I know that the Sabiter reactor consumes one carbon dioxide mole per methane mole, 
		//so I can compute the Sabiter's carbon dioxide consumption from that.
		//Carbon dioxide is 44.010 g/mol.
		//0.024053 mol/s * 44.010 g/mol = 1.0586 g/s 
		//CRP lists carbon dioxide at 1.95 g/L. I'm using gas this time because there's no point in
		//liquidfing something that sublimates before it melts.
		//1.0586 g/s * 1 L/1.95 g = 0.54287 L/s

		//The RWGS reactor is unused in fuel production, since the Sabatier reactor produces 
		//more than enough Oxidizer for stock engines. 
		//It's still included for a little extra challage/fudge factor.

		//There's one more number I need: power consumption. Using the CRP listing of 
		//1 kW = 1 ElectricCharge, I can convert Dr. Zubrin's numbers to KSP terms.
		//Power Breakdown:
		//sorption pumps 	0 kW <not part of this part, see intakes>
		//chemical synthesis 	12 kW
		//controls 		0.08 kW
		//lines, valves, misc 	0 kW
		//refrigerator 		8 kW
		//total 		20.08 kW

		//21 kW slighly under what two Gigantor solar panels produce on Duna.
		//That's pretty reasonable compared to stock ISRU, especialy given the mass savings FUMES provides.
		//There is the problem of dealing with a nine-hour night, but that's an exercise for the player.
		
		INPUT_RESOURCE
		{
			ResourceName = LqdHydrogen
			Ratio = 0.0013687
			FlowMode = STAGE_PRIORITY_FLOW
		}

		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = 0.54287
			FlowMode = STAGE_PRIORITY_FLOW
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 20.08
		}

		OUTPUT_RESOURCE
		{
			ResourceName = LiquidFuel
			Ratio = 0.000077162
			DumpExcess = False
			FlowMode = STAGE_PRIORITY_FLOW
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Oxidizer
			Ratio = 0.00015432
			DumpExcess = True
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}
}

