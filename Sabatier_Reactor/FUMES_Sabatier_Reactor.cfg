PART
{
	//general parameters
	name = FUMES_Sabatier_Reactor
	module = Part
	author = Ed_Gauss

	//asset parameters
	mesh = Sabatier_Reactor.mu
	scale = 1
	rescaleFactor = 1

	node_attach = 0,0,0,0,-1,0

	//editor parameters
	TechRequired = largeElectrics
	entryCost = 0
	cost = 0
	category = Utility
	subcategory = 0
	title = Sabatier Reactor
	manufacturer = Zaltonic Electronics //Todo: change this. FLOOD?
	description = Turns CO2 and Hydrogen into rocketfuel.
	// attachment rules
	attachRules = 0,1,0,0,0

	//standard part parameters
	//Based on Dr. Zubrin's 1997 paper, I can estmate a real world mass.
	//If it's good enough for capsules, it's good enough for this.
	//Tricky thing is that the masses of each part increase exponentally
	//at different rates. Fortunately, each tier of system increases by
	//a power of ten, so I can use a logarithm to find the exponent for
	//three times (see below) the first tier reactor.
	//log(3) = 0.4771
	//This as the exponent to the scaling factor per tier will give me
	//the scaling factor for this part.
	
	//Mass breakdown:
	//sorption pumps: 9.688 kg (5 kg * 4^0.4771)
	//chemical systhesis: 8 kg (no idea how to calculate this, so being pessimistic)
	//controls: 2.784 kg (2 kg * 2^0.4771)
	//lines, valves, misc: 5.067 lg (3 kg * 3^0.4771)
	//refrigerator: 4.844 kg (2.5 kg 4^0.4771)
	//total: 30.38 kg
	mass = 0.03038
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // = 3000

		MODULE
		{
			name = ModuleResourceConverter
			ConverterName = Lf+Ox
			StartActionName = Start Sabatier Reaction
			StopActionName = Stop Sabatier Reaction
			AutoShutdown = false
			GeneratesHeat = false
			UseSpecialistBonus = false
			SpecialistBonusBase = 0
			Specialty = Engineer
			EfficiencyBonus = 1

			INPUT_RESOURCE
			{
				//Two moles of dihydrogen are needed per mole of methane.
				//The reactor uses four moles of hydrogen, but two are reclamed from water.
				//I am producing 0.00001817 L/s of methane. I need that in moles.
				//0.00001817 L/s * 0.4226 g/cm^3 * 1000 cm^3/L = 0.007679 g/s
				//0.007679 g/s * 1 mol/16.04 g = 0.0004787 mol/s
				//I need two moles of dihydorgen, to produce 1 mole of methane.
				//0.0004787 mol/s * 1.008 g/mol * 4 = 0.001930 g/s
				//Now to liters, taking density from CRP again.
				//0.001930 g/s * 1 m^3/0.09 kg * 1000 L/m^3 * 1 kg /1000 g = 0.02145 L/s
				ResourceName = Hydrogen
				//So why hydrogen gas? Why not LquidHydrogen?
				//The Sabatier reaction only works when the reactants are heated to >250 C.
				//Lquid hydrogen boils at -252 C, so requring LquidHydrogen is inaccurate.
				//This also opens up the posiblity of using other souces of hydrogen without
				//requring cooling first (you pay for propelant cooling aready).
				Ratio = 0.02145
				FlowMode = STAGE_PRIORITY_FLOW
			}

			INPUT_RESOURCE
			{
				//CO2 is use by two different processes within this part.
				//0.0005655 mol/s is used by the Sabatier reactor, producing one mole of dioxygen
				//for every mole of CO2.
				//0.0005655 mol/s * 44 g/mol = 44.01 g/mol = 0.02489 g/s
				// Another 0.00006283 mol/s is used by the Reverse Water Gas Shift (RWGS) reactor,
				//at a rate of two moles of CO2 per mole of dioxygen.
				//0.00006283* 44.01 g/mol * 2 = 0.005530 g/s
				//Both reactors are needed to produce LF/Ox in a 0.9/1.1 ratio.
				//0.02489 g/s + 0.005530 g/s = 0.03042 g/s
				//Now into liters, which will also give me my final answer.
				//We'll use CRP density for this calcuation since this is used by KSP.
				//0.03042 g/s * 1 m^3/1.95 kg * 1000 L/m^3 * 1 kg/1000 g = 0.01560 L/s
				ResourceName = CarbonDioxide
				Ratio = 0.01560
				FlowMode = STAGE_PRIORITY_FLOW
			}

			INPUT_RESOURCE
			{
				//Dr. Robert Zubrin et al. published a paper detailing the power requrements of
				//a full scale reactor (basicly this part), but Journal of Aerospace Engineering
				//does not give out infomation for free. Fortunately, some kind soul on
				//Wikipedia cited it in the Sabatier reactor article, and revealed the
				//important bits: for every 17MWh the system receives, one metric ton of
				//propellant (CH4 + O2) is produced. Note that this is with an optimized
				//system, including a RWGS reactor, producing oxygen and methane in a 2:1 ratio.
				//This is not how KSP mixes LquidFuel/Oxidizer, so some clever thinking is needed.

				//I can evade the LF/Ox issue by assuming a Reverse Water Gas Shift (RWGS)
				//reactor is included. In Pioneer Astronautics' (Dr. Zubrin's company)
				//1997 paper on the subject, they note that the heat of a Sabatier reactor is
				//enough to run both reactions at the same time. On page 15 of that paper,
				//Pioneer Astronautics conveniently lists various ISRU system configuraions,
				//complete with a breakdown of each system's power requrements per incerment
				//of fuel production.

				//So how much power do I need? To know that, I need my total output mass.
				//0.007723 g/s (methane) + 0.009440 g/s (oxidizer) = 0.01716 g/s
				//The lowest tier of Sabatier/Electrolysis/Reverse Water Gas Shift
				//(S/E-RGWS) outputs 0.5 kg/day. The paper assumes the system runs durring
				//a 12-hour day only, so the total output of this system is 0.01157 g/s.
				//This is a real world propellant mix of 3.5:1 Oxidsier/Fuel, so I'll
				//compare methane production instead.
				//0.01157 g/s * 1/(3.5+1) = 0.002571 g/s
				//0.007723 g/s * 1/0.002571 g/s = 3.004
				//This part produces 3.004 times the methane of the lowest tier system
				//in the paper. I'll fudge that to 3 times, but maintain real world
				//power consumption to keep things challanging.

				//Power Breakdown:
				//sorption pumps: 72 W
				//chemical synthesis: 450 W
				//controls (logarithmic): 20log10(3*10) = 29.54 W
				//lines, valves, misc: 0 W
				//refrigerator: 315 W
				//total: 866.5 W = 0.8665 kW
				//Let's do everything in g/s and kW, so we'll need to convert Dr. Zubrin's
				//numbers.

				ResourceName = ElectricCharge
				Ratio = 0.8655
				//just above an RTG's output *evil laugh*
			}

			OUTPUT_RESOURCE
			{
				//The reactor system devloped by Martin Merietta in 1994 produced 238 cc/min,
				// which accounted for 93% of all hydrogen used.
				//I messed up when first making this part, using 283 cc/min instead.
				//My testing indicates that this is slow as it is, so 283 cc/min it is.
				//I'll say the Kerbal verson is 100% effecent, so this would mean that FUMES 
				//can produce 304 cc/min (100*283/93).
				//Perhaps unrealistic, but it makes my life easier.
				//I need to know how much mass this is first.
				//Methane gas is 0.656 g/L.
				//304 cc/min * 1 L/1000 cc * 1 g/ 0.656 L = 0.4634 g/min
				//I'll need to liquidfy it, makeing it denser. 
				//This time I'll use the CRP Density listing, 
				//as this next calcuation will give me volume for KSP.
				//0.4634 g/min * 1 kg/1000 g * 1 m^3/425 kg = 0.000001090 m^3/min
				//0.000001090 m^3/min * 1000 L/m^3 = 0.001090 L/min
				//Let's get this in seconds.
				// 0.001090 L/min * 1 min/60 s = 0.00001817 L/s
				//I want to make LiquidFuel, which has a diffentent density 
				//and contains 1 Unit/5 Liter.
				//I want FUMES to accurately repersent Mars Direct ISRU,
				// so I won't fudge the numbers.
				//Good news: I can use LquidFuel's density to convert from output mass.
				//0.4634 g/min * 1 min/60 s = 0.007723 g/s
				//1 m^3/1000 kg * 1000 L/m^3 * 0.007723 g/s * 1 kg/1000 g = 0.000007723 L/s
				//Each unit of LiquidFuel represents five Liters, so one more conversion.
				//0.000007723 L/s * 1 LF/5 Liter = 0.000001545 LF/s
				ResourceName = LiquidFuel
				Ratio = 0.000001645
				DumpExcess = False
				FlowMode = STAGE_PRIORITY_FLOW
			}

			OUTPUT_RESOURCE
			{
				//We get oxygen from water eletrolsis, which will be used for Oxidizer.
				//Evey mole of CO2 provides two moles of oxygen, or one mole of O2.
				//Trouble is, KSP mixes LF/Ox in a 0.9/1.1 ratio, so we need some extra
				//Oxidizer. RWGS to the recure! I can pull more CO2 to produce the needed
				//Oxidizer, since I already have a electrolyser.
				//0.000001645 LF/s * 1.1 Ox/0.9 LF = 0.000002011 Ox/s
				//
				//That was easy, but before I run off with this number, I want to find
				//how much is produced by the Sabiter reactor. This will help when
				//calcuating inputs, or creating RealFuels configs.
				//I know that the Sabatier reactor produces methane/dioxygen in a
				//1:1, and that Ox/LF is consumed in a 1.1/0.9 ratio. This means that
				//0.2/2 or 0.1 of the Oxidizer comes from the RWGS reactor. Now I need
				//that in moles of dioxygen. Unit conversion time!
				//0.000002011 Ox/s * 5 L/Ox = 0.00001005 L/s
				//0.00001005 L/s * 1 m^3/1000 L * 1000 kg/m^3 * 1000 g/kg = 0.01005 g/s
				//0.01005 g/s * 1 mol/16.00 g = 0.0006283 mol/s
				//0.1 * 0.0006283 mol/s = 0.00006283 mol/s (RWGS only)
				//0.9 * 0.0006283 mol/s = 0.0005655 mol/s (Sabatier only)
				ResourceName = Oxidizer
				Ratio = 0.000002011
				DumpExcess = True
				FlowMode = STAGE_PRIORITY_FLOW
			}
		}
}
